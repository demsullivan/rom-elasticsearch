# This file is synced from rom-rb/template-gem repo

name: ci

on:
  push:
    paths:
      - ".github/workflows/ci.yml"
      - "docker-compose.yml"
      - "lib/**"
      - "*.gemspec"
      - "spec/**"
      - "Rakefile"
      - "Gemfile"
      - "Gemfile.devtools"
      - ".rubocop.yml"
      - "project.yml"
  pull_request:
    branches:
      - master
  create:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - "3.0"
          - "2.7"
          - "2.6"
          - "2.5"
          - "jruby"
        include:
          - ruby: "3.0"
            coverage: "true"
    env:
      COVERAGE: ${{ matrix.ruby == '3.0' }}
      COVERAGE_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.13.1
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Install latest bundler
        run: |
          gem install bundler --no-document
          bundle config set without 'tools benchmarks docs'
      - name: Bundle install
        run: bundle install --jobs 4 --retry 3
      - name: Run all tests
        run: bundle exec rake
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        if: env.COVERAGE == 'true' && env.COVERAGE_TOKEN != ''
        with:
          project-token: ${{ env.COVERAGE_TOKEN }}
          coverage-reports: coverage/coverage.xml
  release:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags') && github.event_name == 'create'
    needs: tests
    env:
      GITHUB_LOGIN: rom-bot
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
    steps:
      - uses: actions/checkout@v1
      - name: Install package dependencies
        run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Install dependencies
        run: gem install ossy --no-document
      - name: Trigger release workflow
        run: |
          tag=$(echo $GITHUB_REF | cut -d / -f 3)
          ossy gh w rom-rb/devtools release --payload "{\"tag\":\"$tag\",\"sha\":\"$\",\"tag_creator\":\"$GITHUB_ACTOR\",\"repo\":\"$GITHUB_REPOSITORY\",\"repo_name\":\"$\"}"
